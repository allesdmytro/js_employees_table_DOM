{"version":3,"sources":["scripts/main.js"],"names":["table","document","querySelector","tableBody","body","addEventListener","e","item","target","closest","index","cellIndex","sortedArray","direction","rows","sort","a","b","aValue","cells","innerText","replace","bValue","isNaN","localeCompare","append","stopPropagation","row","activeRow","classList","remove","add","pushNotification","title","description","type","divEl","createElement","h2El","pEl","dataset","qa","textContent","style","marginTop","marginBottom","setTimeout","insertAdjacentHTML","form","inputs","querySelectorAll","preventDefault","formData","FormData","tr","formDataArray","get","length","i","td","num","parseInt","toLocaleString","forEach","input","value"],"mappings":";AAAA,aAqHA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAnHA,IAAMA,EAAQC,SAASC,cAAc,SAC/BC,EAAYF,SAASC,cAAc,SACnCE,EAAOH,SAASC,cAAc,QAEpCF,EAAMK,iBAAiB,QAAS,SAAAC,GACxBC,IAAAA,EAAOD,EAAEE,OAAOC,QAAQ,MACxBC,EAAQH,EAAKI,UACfC,EAAc,GAEZ,cAAeL,IACnBA,EAAKM,UAAY,OAGI,QAAnBN,EAAKM,WACPN,EAAKM,UAAY,OAEjBD,EAAc,EAAIT,EAAUW,MAAMC,KAAK,SAACC,EAAGC,GACnCC,IAAAA,EAASF,EAAEG,MAAMT,GAAOU,UAAUC,QAAQ,QAAS,IACnDC,EAASL,EAAEE,MAAMT,GAAOU,UAAUC,QAAQ,QAAS,IAErDE,OAAAA,MAAML,GACDA,EAAOM,cAAcF,GAErBJ,EAASI,MAIpBf,EAAKM,UAAY,MAEjBD,EAAc,EAAIT,EAAUW,MAAMC,KAAK,SAACC,EAAGC,GACnCC,IAAAA,EAASF,EAAEG,MAAMT,GAAOU,UAAUC,QAAQ,QAAS,IACnDC,EAASL,EAAEE,MAAMT,GAAOU,UAAUC,QAAQ,QAAS,IAErDE,OAAAA,MAAML,GACDI,EAAOE,cAAcN,GAErBI,EAASJ,KAKtBf,EAAUsB,OAAVtB,MAAAA,EAAoBS,EAAAA,MAGtBT,EAAUE,iBAAiB,QAAS,SAAAC,GAClCA,EAAEoB,kBAEIC,IAAAA,EAAMrB,EAAEE,OAAOC,QAAQ,MACvBmB,EAAY3B,SAASC,cAAc,WAEpC0B,GAGHA,EAAUC,UAAUC,OAAO,UAC3BH,EAAIE,UAAUE,IAAI,WAHlBJ,EAAIE,UAAUE,IAAI,YAOtB,IAAMC,EAAmB,SAACC,EAAOC,EAAaC,GACtCC,IAAAA,EAAQnC,SAASoC,cAAc,OAC/BC,EAAOrC,SAASoC,cAAc,MAC9BE,EAAMtC,SAASoC,cAAc,KAEnCD,EAAMP,UAAY,eAClBO,EAAMI,QAAQC,GAAK,eACnBL,EAAMP,UAAUE,IAAII,GACpBG,EAAKT,UAAY,QACjBS,EAAKI,YAAcT,EACnBM,EAAIG,YAAcR,EAClBE,EAAMX,OAAOa,GACbF,EAAMX,OAAOc,GAEbD,EAAKK,MAAMC,UAAY,OACvBN,EAAKK,MAAME,aAAe,IAC1BN,EAAII,MAAMC,UAAY,OACtBL,EAAII,MAAME,aAAe,OAEzBzC,EAAKqB,OAAOW,GAEZU,WAAW,WACTV,EAAMN,UACL,MAGL1B,EAAK2C,mBAAmB,YAAxB,y4BA4BA,IAAMC,EAAO/C,SAASC,cAAc,QAC9B+C,EAASD,EAAKE,iBAAiB,SAErCF,EAAK3C,iBAAiB,SAAU,SAAAC,GAC9BA,EAAE6C,iBAEIC,IAAAA,EAAW,IAAIC,SAASL,GACxBM,EAAKrD,SAASoC,cAAc,MAE5BkB,EAAgB,CACpBH,EAASI,IAAI,QACbJ,EAASI,IAAI,YACbJ,EAASI,IAAI,UACbJ,EAASI,IAAI,OACbJ,EAASI,IAAI,WAGXJ,GAAAA,EAASI,IAAI,QAAQC,OAAS,EAChCzB,EAAiB,qBACf,uCACA,cAKA,GAACoB,EAASI,IAAI,SAAYJ,EAASI,IAAI,aACrCJ,EAASI,IAAI,QAAWJ,EAASI,IAAI,UAQvCJ,GAAAA,EAASI,IAAI,OAAS,IAAMJ,EAASI,IAAI,OAAS,GACpDxB,EAAiB,mBACf,gCACA,aAHAoB,CAQC,IAAA,IAAIM,EAAI,EAAGA,EAAIH,EAAcE,OAAQC,IAAK,CACvCC,IAAAA,EAAK1D,SAASoC,cAAc,MAE9BqB,GAAAA,IAAMH,EAAcE,OAAS,EAAG,CAC5BG,IAAAA,EAAMC,SAASN,EAAcG,IAEnCC,EAAGjB,YAAkBkB,IAAAA,OAAAA,EAAIE,eAAe,eAExCH,EAAGjB,YAAca,EAAcG,GAGjCJ,EAAG7B,OAAOkC,GAGZxD,EAAUsB,OAAO6B,GAEjBtB,EAAiB,UACf,+BAAgC,WAElCiB,EAAOc,QAAQ,SAAAC,GACbA,EAAMC,MAAQ,YAnCdjC,EAAiB,0BACf,4BACA","file":"main.d0b1af00.js","sourceRoot":"../src","sourcesContent":["'use strict';\n\nconst table = document.querySelector('table');\nconst tableBody = document.querySelector('tbody');\nconst body = document.querySelector('body');\n\ntable.addEventListener('click', e => {\n  const item = e.target.closest('th');\n  const index = item.cellIndex;\n  let sortedArray = [];\n\n  if (!('direction' in item)) {\n    item.direction = 'ASC';\n  }\n\n  if (item.direction === 'ASC') {\n    item.direction = 'DESC';\n\n    sortedArray = [...tableBody.rows].sort((a, b) => {\n      const aValue = a.cells[index].innerText.replace(/[$,]/g, '');\n      const bValue = b.cells[index].innerText.replace(/[$,]/g, '');\n\n      if (isNaN(aValue)) {\n        return aValue.localeCompare(bValue);\n      } else {\n        return aValue - bValue;\n      };\n    });\n  } else {\n    item.direction = 'ASC';\n\n    sortedArray = [...tableBody.rows].sort((a, b) => {\n      const aValue = a.cells[index].innerText.replace(/[$,]/g, '');\n      const bValue = b.cells[index].innerText.replace(/[$,]/g, '');\n\n      if (isNaN(aValue)) {\n        return bValue.localeCompare(aValue);\n      } else {\n        return bValue - aValue;\n      };\n    });\n  }\n\n  tableBody.append(...sortedArray);\n});\n\ntableBody.addEventListener('click', e => {\n  e.stopPropagation();\n\n  const row = e.target.closest('tr');\n  const activeRow = document.querySelector('.active');\n\n  if (!activeRow) {\n    row.classList.add('active');\n  } else {\n    activeRow.classList.remove('active');\n    row.classList.add('active');\n  }\n});\n\nconst pushNotification = (title, description, type) => {\n  const divEl = document.createElement('div');\n  const h2El = document.createElement('h2');\n  const pEl = document.createElement('p');\n\n  divEl.classList = 'notification';\n  divEl.dataset.qa = 'notification';\n  divEl.classList.add(type);\n  h2El.classList = 'title';\n  h2El.textContent = title;\n  pEl.textContent = description;\n  divEl.append(h2El);\n  divEl.append(pEl);\n\n  h2El.style.marginTop = '10px';\n  h2El.style.marginBottom = '0';\n  pEl.style.marginTop = '10px';\n  pEl.style.marginBottom = '10px';\n\n  body.append(divEl);\n\n  setTimeout(() => {\n    divEl.remove();\n  }, 2000);\n};\n\nbody.insertAdjacentHTML('beforeend',\n  `<form class=\"new-employee-form\">\n      <label>Name:\n        <input name=\"name\" type=\"text\" data-qa=\"name\">\n      </label>\n      <label>Position:\n        <input name=\"position\" type=\"text\" data-qa=\"position\">\n      </label>\n      <label> Office:\n        <select name=\"office\" data-qa=\"office\" >\n         <option value=\"Tokyo\">Tokyo</option>\n         <option value=\"Singapore\">Singapore</option>\n         <option value=\"London\">London</option>\n         <option value=\"New York\">New York</option>\n         <option value=\"Edinburgh\">Edinburgh</option>\n         <option value=\"San Francisco\">San Francisco</option>\n        </select>\n      </label>\n      <label>Age:\n        <input name=\"age\" type=\"number\" data-qa=\"age\">\n      </label>\n      <label>Salary:\n        <input name=\"salary\" type=\"number\" data-qa=\"salary\">\n      </label>\n      <button>Save to table</button>\n     </form>`\n);\n\nconst form = document.querySelector('form');\nconst inputs = form.querySelectorAll('input');\n\nform.addEventListener('submit', e => {\n  e.preventDefault();\n\n  const formData = new FormData(form);\n  const tr = document.createElement('tr');\n\n  const formDataArray = [\n    formData.get('name'),\n    formData.get('position'),\n    formData.get('office'),\n    formData.get('age'),\n    formData.get('salary'),\n  ];\n\n  if (formData.get('name').length < 4) {\n    pushNotification('Name is too short!',\n      'Name should have at least 4 letters.',\n      'error');\n\n    return;\n  }\n\n  if (!formData.get('name') || !formData.get('position')\n    || !formData.get('age') || !formData.get('salary')) {\n    pushNotification('Something went wrong...',\n      'All fields must be filled',\n      'error');\n\n    return;\n  }\n\n  if (formData.get('age') < 18 || formData.get('age') > 90) {\n    pushNotification('Age is incorrect',\n      'Age must be between 18 and 90',\n      'error');\n\n    return;\n  }\n\n  for (let i = 0; i < formDataArray.length; i++) {\n    const td = document.createElement('td');\n\n    if (i === formDataArray.length - 1) {\n      const num = parseInt(formDataArray[i]);\n\n      td.textContent = `$${num.toLocaleString('en-US')}`;\n    } else {\n      td.textContent = formDataArray[i];\n    }\n\n    tr.append(td);\n  }\n\n  tableBody.append(tr);\n\n  pushNotification('Success',\n    'New data is already in table', 'success');\n\n  inputs.forEach(input => {\n    input.value = null;\n  });\n});\n"]}